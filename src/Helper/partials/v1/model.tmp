<?php
/* Generated by neoan3-cli */

namespace Neoan3\Model;

use Neoan3\Provider\MySql\Database;
use Neoan3\Provider\MySql\Transform;

/**
 * Class {{name}}
 *
 * @package Neoan3\Model
 * @generator Neoan3\Cli
 *
 * @method static get(string $id)
 * @method static create(array $modelArray)
 * @method static update(array $modelArray)
 * @method static find(array|null $conditionArray)
 */

class {{name.pascal}}Model extends IndexModel{

    /**
     * @var Database|null
     */
    private static ?Database $db = null;

    /**
     * @param $method
     * @param $args
     * @return mixed
     */
    public static function __callStatic($method, $args)
    {
        if(!method_exists(self::class, $method)){
            $transform = new Transform('{{name.lower}}', self::$db);
            return $transform->$method(...$args);
        } else {
            return self::$method(...$args);
        }
    }

    /**
     * @param Database $database
     */
    public static function init(Database $database)
    {
        self::$db = $database;
    }


    /**
     * @param $id
     * @return mixed
     */
    static function delete(string $id)
    {
        return [];
    }
}