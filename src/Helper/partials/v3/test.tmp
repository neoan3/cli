<?php

namespace Neoan3\Component\{{name.pascal}};

use PHPUnit\Framework\TestCase;

/**
 * Class {{name.pascal}}Test
 *
 * @package Neoan3\Component\{{name.pascal}}
 * @generator Neoan3\Cli (for neoan3 v3.*)
 */
class {{name.pascal}}Test extends TestCase
{
    private {{name.pascal}}Controller $instance;
    function setUp(): void
    {
        $this->instance = new {{name.pascal}}Controller();
    }
    {{methods}}
}

 /**
 * Using models?
 * You can use the same mock-helpers as the models themselves.
 *
 * e.g. to mock a ::find call
 * $mockDb = new \Neoan3\Provider\MySql\MockDatabaseWrapper([]);
 * $expected = $mockDb->mockFind('modelName');
 * // don't forget to register your mock provider(s in the right order)
 * $this->instance->registerProvider($mockDb);
 * // or when using PHP8 attributes
 * $phpAttributes = new \Neoan3\Provider\Attributes\UseAttributes();
 * $phpAttributes->hookAttributes(['db'=>$mockDb]);
 *
 * $response = $this->instance->init();
 * $this->assertSame([$expected], $response);
 *
 */
